<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function () {
    var c = this;

    c.errors = {}; // Object to track field-specific error messages
    c.minDate = new Date().toISOString().split("T")[0]; // Set today's date as the minimum date
  c.data.selectedVehicle = c.selectedVehicle;
    c.clearError = function (field) {
        if (c.errors[field]) {
            delete c.errors[field]; // Remove the error message for the given field
        }
    };

    c.handleDateChange = function () {
    if (c.Date) {
        var selectedDate = new Date(c.Date);
        var dayOfWeek = selectedDate.getDay(); // Get the day of the week (0 = Sunday, 6 = Saturday)

        // Check if Sunday is selected
        if (dayOfWeek === 0) {
            c.errors.Date = "Sundays are not available.";
            c.Date = ""; // Clear the invalid date
        } else {
            c.clearError("Date"); // Clear the error when a valid date is selected
        }
    }
};
	
	 c.fetchLaborCost = function () {
        if (c.selectedVehicle) {
            // Find the selected vehicle's model ID
          var selectedVehicle = c.data.vehicleOptions.find(function(vehicle) {
    return vehicle.ID === c.selectedVehicle;
	});
	 if (selectedVehicle) {
                var selectedModelID = selectedVehicle.ModelID;

                // Send the selected model ID to the server
                c.server.get({
                    selectedVehicleModelID: selectedModelID
                }).then(function (response) {
                    c.laborCost = response.data.laborCost; // Update labor cost on the client
                    c.parts = response.data.parts || []; // Update parts on the client

                    // Calculate total parts cost
                    c.totalPartsCost = c.parts.reduce(function (sum, part) {
                        return sum + (part.price || 0);
                    }, 0);
									c.totalCost=parseInt(c.totalPartsCost,10)+parseInt(c.laborCost,10);
                });
            }
        } else {
            c.laborCost = null; // Clear labor cost if no vehicle is selected
            c.parts = []; // Clear parts
            c.totalPartsCost = 0; // Clear total parts cost
					c.totalCost=0;
        }
    };


    c.test = function () {
        // Reset previous errors
        c.errors = {};

        // Validation: Check for empty fields
        if (!c.Date) {
            c.errors.Date = "This field is mandatory.";
        }
        if (!c.selectedVehicle) {
            c.errors.selectedVehicle = "This field is mandatory.";
        }
       // if (!c.selectedType) {
         //   c.errors.selectedType = "This field is mandatory.";
        //}
			  if (!c.selectedSlot) {
            c.errors.selectedSlot = "This field is mandatory.";
        }
        
     

        // If any errors exist, stop submission
        if (Object.keys(c.errors).length > 0) {
            return; // Do not proceed further
        }

        // Store data
      
       c.data.selectedVehicle=c.selectedVehicle;
			  c.data.selectedSlot = c.selectedSlot;
			  var date = new Date(c.Date);
        // Extract year, month, and day components
        var year = date.getFullYear();
        var month = String(date.getMonth() + 1).padStart(2, "0"); // Months are zero-based
        var day = String(date.getDate()).padStart(2, "0");
        // Combine into YYYY-MM-DD format
        var formattedDate = year + "-" + month + "-" + day;
        c.Date = formattedDate;

        c.data.date = c.Date;
			  
  		document.getElementById("success-popup").style.display = "flex";
      
    };
				c.error= function(){ // Simulate server update
      		  c.server.update().then(function () {
          
					
					
						// Clear fields
            c.selectedVehicle = "";
            c.description = "";
            c.selectedType = "";
            c.Date = "";
					  c.data.selectedSlot = "";

            // Clear errors
            c.errors = {};

            // Show success popup
          
        });
	};
};

]]></client_script>
        <controller_as>c</controller_as>
        <css>/* General Reset */
body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f8fc; /* Lighter background for a softer look */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    min-height: 100vh;
}

/* Container */
.ui-container {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    width: 100%;
    max-width: 1200px;
    padding: 30px;
    border-radius: 15px;
    background-color: #ffffff;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    flex-wrap: wrap; /* Allows wrapping for smaller screens */
}

/* Left Section */
.ui-left {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 20px;
    min-width: 300px; /* Ensures this section is responsive */
}

.vehicle-selection select {
    width: 100%; /* Adjusting to match the width of the date input */
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 16px;
    color: #333;
    margin-top: 10px;
    margin-bottom: 10px;
}

/* Right Section */
.ui-right {
    display: flex;
    flex-direction: column;
    gap: 20px;
    width: 320px;
    min-width: 280px; /* Ensures the right section is flexible */
}

/* Label Styling */
.ui-label h1 {
    font-size: 28px;
    font-weight: 600;
    color: #333;
    margin: 0;
}

.ui-description p {
    font-size: 18px;
    color: #555;
}

/* Vehicle Selection */
.vehicle-selection label {
    font-size: 16px;
    font-weight: 600;
    color: #333;
}

.vehicle-selection select, input {
    width: 220px;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 16px;
    color: #333;
}

.vehicle-selection select:focus, input:focus {
    outline: none;
    border-color: #4caf50;
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
}

/* Spare Parts Table */
.spare-parts {
    margin-top: 20px;
}

.parts-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 15px;
    border-bottom: 1px solid #ddd;
}

.parts-table th, .parts-table td {
    padding: 12px;
    text-align: center;
    font-size: 16px;
     color: #121111;
}

.parts-table th {
    background-color: #f0f8ff;
    font-weight: 600;
}

.parts-table td {
    border-bottom: 1px solid #eee;
}

.parts-table tfoot td {
    font-weight: bold;
    border-top: 2px solid #ddd;
    font-size: 16px;
   
}

/* Date Input Styling */
input[type="date"] {
    width:100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 16px;
    color: #333;
    margin-top: 10px;
    margin-bottom: 10px;
}
#slots {
    width: 100%;
}

input[type="date"]:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

/* Cost Sections */
.cost-section {
    margin-top: 10px;
    background-color: #f9f9f9;
    padding: 15px;
    border-radius: 8px;
}

.cost-section h3 {
    font-size: 20px;
    font-weight: 600;
    color: #333;
    margin-bottom: 10px;
}
.cost-sectiontotal{ 
    margin-top: 10px;
    background-color:#dfeded;
    padding: 15px;
    border-radius: 8px;
}
.cost-section p {
    font-size: 18px;
    color: #333;
}
.cost-sectiontotal p {
    font-size: 18px;
    color: #333;
}
.cost-sectiontotal h3 {
    font-size: 20px;
    font-weight: 600;
    color: #333;
    margin-bottom: 10px;
}
/* Button Section */
.form-submit-container {
    margin-top: 30px;
    width: 100%;
    max-width: 1200px;
    text-align: center;
}

.form-submit-container button {
    padding: 12px 40px; /* Smaller padding for smaller button */
    background-color: #007bff; /* Blue background */
    color: #fff;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 16px; /* Smaller font size */
    transition: background-color 0.3s ease;
    margin-top: 20px;
}

.form-submit-container button:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

/* Popup */
.popup {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.popup-content {
    background-color: #fff;
    padding: 40px;
    border-radius: 15px;
    text-align: center;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    width: 100%;
}

.popup-content i {
    font-size: 6rem;
    color: #4caf50; /* Green color for success */
    margin-bottom: 20px;
}

.popup-content h2 {
    font-size: 2rem;
    color: #333;
    margin-bottom: 15px;
}

.popup-content p {
    font-size: 1.4rem;
    color: #555;
    margin-bottom: 30px;
}

.popup-content .close-btn {
    background-color: #4caf50;
    color: #fff;
    border: none;
    border-radius: 8px;
    padding: 12px 30px;
    font-size: 1.2rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.popup-content .close-btn:hover {
    background-color: #388e3c;
}

/* Error Message */
.error-message {
    color: red;
    font-size: 1em;
    font-weight: 600;
    margin-top: 4px;
    display: block;
}

/* Info Icon */
.info-icon {
    cursor: pointer;
    position: relative;
    margin-left: 10px;
}

.info-popup {
    display: none;
    position: absolute;
    top: -25px;
    left: 25px;
    background-color: #333;
    color: white;
    padding: 5px 10px;
    font-size: 12px;
    border-radius: 4px;
    z-index: 10;
    white-space: nowrap;
}

.info-icon:hover .info-popup {
    display: block;
}

/* Star */
.star {
    color: red;
    font-size: 1.2em;
    font-weight: 600;
}

/* Media Queries */
@media (max-width: 1024px) {
    .ui-container {
        flex-direction: column;
        padding: 20px;
    }

    .ui-left, .ui-right {
        width: 100%;
    }

    .vehicle-selection select, input {
        width: 100%;
    }

    .form-submit-container button {
        width: 100%;
        padding: 12px 20px;
    }
}

@media (max-width: 768px) {
    .ui-container {
        padding: 10px;
    }

    .ui-left, .ui-right {
        width: 100%;
    }

    .vehicle-selection select, input {
        width: 100%;
    }

    .form-submit-container button {
        width: 100%;
        padding: 10px;
    }

    .cost-section p, .cost-section h3 {
        font-size: 16px;
    }

    .popup-content h2 {
        font-size: 1.6rem;
    }

    .popup-content p {
        font-size: 1.2rem;
    }
}

@media (max-width: 480px) {
    .ui-label h1 {
        font-size: 24px;
    }

    .ui-description p {
        font-size: 16px;
    }

    .vehicle-selection select, input {
        width: 100%;
    }

    .form-submit-container button {
        padding: 10px;
        font-size: 14px;
    }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>standard_service_request</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>standard Service Request</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
    // Object to hold the data
    data.vehicleOptions = [];
	
	 data.sys_id = $sp.getParameter('sys_id'); // Get sys_id from URL parameters

	 if (data.sys_id) {
        var gr = new GlideRecord('x_1522458_automo_0_standard_services'); // Table name
        if (gr.get(data.sys_id)) { // Fetch the service request record
        
					var instanceUrl = 'https://dev231407.service-now.com'; 
					var imageSysId=gr.getValue('image');
					var imageURL= getImageUrl(imageSysId);
					data.request = {
                
                type: gr.getDisplayValue('type'),
                title: gr.getDisplayValue('title'),
								image: imageURL,
								department:gr.getValue('department'),
                description: gr.getDisplayValue('description')
					
            };

         } else {
            data.error = "Request not found.";
        }
    } else {
        data.error = "No request ID provided.";
    }

	
    // GlideRecord to query the Vehicle table
    var vehicleGR = new GlideRecordSecure('x_1522458_automo_0_vehicle');
	  vehicleGR.addActiveQuery();
		vehicleGR.addEncodedQuery("ownerDYNAMIC90d1921e5f510100a9ad2572f2b477fe");
    vehicleGR.query();

    while (vehicleGR.next()) {
        // Push each vehicle into the vehicleOptions array
        data.vehicleOptions.push({
            ID: vehicleGR.getDisplayValue('sys_id'), // sys_id of the vehicle
						ModelID:vehicleGR.getValue('mode0'),
            Model: vehicleGR.getDisplayValue('mode0')
					
        });
    }
	
	
	// Function to fetch labor cost based on vehicle model
    if (input && input.selectedVehicleModelID) {
        var laborCostGR = new GlideRecord('x_1522458_automo_0_standard_service_model');
        laborCostGR.addQuery('model', input.selectedVehicleModelID); // Match the selected model
        laborCostGR.addQuery('standard_service', data.sys_id); // Match the current standard service
        laborCostGR.query();

        if (laborCostGR.next()) {
            data.laborCost = laborCostGR.getValue('labor_cost'); // Get the labor cost

            // Fetch associated parts for the selected model
            var parts = [];
            var partsList = laborCostGR.parts; // Assuming 'parts' is the reference list field
            if (partsList) {
						var partIDs = partsList.split(','); // Convert the comma-separated string into an array
						partIDs.forEach(function (partID) {
								var partGR = new GlideRecord('x_1522458_automo_0_parts');
								if (partGR.get(partID.trim())) { // Ensure partID is trimmed of extra spaces
										parts.push({
												name: partGR.getValue('part_name'),
												price: parseFloat(partGR.getValue('price')) || 0
										});
								}
						});
				}
            data.parts = parts;
        } else {
            data.laborCost = "No labor cost found for this model.";
            data.parts = [];
        }
    }
			
       
	
	
	
	
	
	/////////////Insert
	
	
	  var gr1 = new GlideRecord("x_1522458_automo_0_service_request");
	  gr1.initialize();
	  if(input&&input.date&&input.selectedSlot&&input.selectedVehicle){
		gr1.setValue("vehicle" , input.selectedVehicle);
		gr1.setValue("type" , data.request.type);
	  gr1.setValue("description", data.request.description);
	  gr1.setValue("inspection_date" , input.date);
		gr1.setValue("desired_time" ,input.selectedSlot);
		gr1.setValue("standard", true);
		gr1.setValue("state", 10)	;			/// why it's not working.
		gr1.setValue("department",data.request.department);
	  gr1.insert();
		
	}
	function getImageUrl(imageSysId) {
        if (!imageSysId) return ''; // Return empty string if no image

        var attachmentGr = new GlideRecord('sys_attachment');
        attachmentGr.addQuery('sys_id', imageSysId);
        attachmentGr.query();

        if (attachmentGr.next()) {
            return instanceUrl + '/sys_attachment.do?sys_id=' + attachmentGr.sys_id; // Construct the full image URL
        }
        return ''; 
    }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-01-02 08:22:47</sys_created_on>
        <sys_id>442f83d683721210cccd5d10feaad37d</sys_id>
        <sys_mod_count>246</sys_mod_count>
        <sys_name>standard Service Request</sys_name>
        <sys_package display_value="Automotive Service Management" source="x_1522458_automo_0">22ad9dee83861210cccd5d10feaad392</sys_package>
        <sys_policy/>
        <sys_scope display_value="Automotive Service Management">22ad9dee83861210cccd5d10feaad392</sys_scope>
        <sys_update_name>sp_widget_442f83d683721210cccd5d10feaad37d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-16 09:47:48</sys_updated_on>
        <template><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Service Request</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <!-- Add Font Awesome CDN for the green checkmark -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="ui-container">
        <!-- Left Section -->
        <div class="ui-left">
            <div class="ui-icon" ng-if="data.request.icon">
                <img ng-src="{{data.request.icon}}" alt="Icon" />
            </div>
            <div class="ui-label">
                <h1>{{data.request.title}}</h1>
            </div>
            <div class="ui-description">
                <p>{{data.request.description}}</p>
            </div>
            <div class="vehicle-selection">
                <label for="vehicle-select">Select Your Vehicle:</label>
                <select id="vehicle-select" ng-model="c.selectedVehicle" ng-options="vehicle.ID as vehicle.Model for vehicle in c.data.vehicleOptions" ng-change="c.fetchLaborCost()">
                    <option value="" disabled selected>Select a vehicle</option>
                </select>
            </div>
            
            <div style="padding-right:50px">
            
                <!-- Spare Parts Table -->
                <div class="spare-parts" ng-if="c.selectedVehicle">
                    <h3>Spare Parts</h3>
                    <table class="parts-table">
                        <thead>
                            <tr>
                                <th>Part Name</th>
                                <th  style="text-align:right">Price (EGP)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="part in c.parts">
                                <td>{{ part.name }}</td>
                                <td style="text-align:right">{{ part.price | number:2 }}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="cost-section" ng-if="c.selectedVehicle">
                    <div class="cost-row">
                        <h3>Spare Parts Cost</h3>
                        <p>{{ c.totalPartsCost | number:2 }} EGP</p>
                    </div>
                </div>

                <!-- Labor Cost -->
                <div class="cost-section" ng-if="c.selectedVehicle">
                    <div class="cost-row">
                        <h3>Labor Cost</h3>
                        <p>{{ c.laborCost | number:2 }} EGP</p>
                    </div>
                </div>

                <!-- Total Cost -->
                <div class="cost-sectiontotal" ng-if="c.selectedVehicle">
                    <div class="cost-row">
                        <h3>Total Cost</h3>
                        <p>{{ c.totalCost | number:2 }} EGP</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Section -->
        <div class="ui-right">
            <img ng-src="{{data.request.image}}" alt="Service Image" />
            <div class="vehicle-selection" ng-if="c.selectedVehicle" style="justify-content: space-between">
                <label for="vehicle-select">Date <span class="star">*</span>
                    <span class="info-icon">
                        <span class="info-popup">Choose a date for the vehicle inspection. <p>Sundays are not available.</p></span>
                    </span>
                </label>
                <input type="date" id="Date" ng-model="c.Date" ng-change="c.handleDateChange()" min="{{c.minDate}}" />
                <span class="error-message" ng-show="c.errors.Date">{{c.errors.Date}}</span>
            </div>

            <div class="vehicle-selection" ng-if="c.selectedVehicle">
                <label for="slots">Desired Time <span class="star">*</span></label>
                <select id="slots" ng-model="c.selectedSlot" ng-change="c.clearError('selectedSlot')">
                    <option value="">-- Select Time --</option>
                    <option value="Morning (9 AM - 12 PM)">Morning (9 AM - 12 PM)</option>
                    <option value="Afternoon (1 PM - 4 PM)">Afternoon (1 PM - 4 PM)</option>
                </select>
                <span class="error-message" ng-show="c.errors.selectedSlot">{{c.errors.selectedSlot}}</span>
            </div>
            <div class="form-submit-container" ng-if="c.selectedVehicle">
        <button type="submit" ng-click="c.test()">Request the Service</button>
    </div>
        </div>
    </div>

    <!-- Button Section -->
    

    <div id="success-popup" class="popup">
        <div class="popup-content">
            <i class="fas fa-check-circle"></i>
            <h2>Request Submitted Successfully</h2>
            <p>Your service request has been submitted successfully.</p>
            <button class="close-btn" onclick="closePopup()" ng-click="c.error()">OK</button>
        </div>
    </div>

    <script>
        // Toggle info popup
        function toggleInfo() {
            var infoPopup = document.getElementById("success-popup");
            infoPopup.style.display = infoPopup.style.display === "block" ? "none" : "block";
        }

        function closePopup() {
            document.getElementById("success-popup").style.display = "none";
            window.location.href = "https://dev231407.service-now.com/customer_portal?id=asm_my_requests"; 
        }
    </script>
</body>
</html>
]]></template>
    </sp_widget>
</record_update>
