<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function() {
  var c = this;

  // Open the chat
  c.openChat = function open() {
    document.getElementById('chat-container').classList.remove('hidden');
  };

  // Close the chat
  c.closeChat = function close() {
    document.getElementById('chat-container').classList.add('hidden');
  };

  // Send a message
  c.sendMessage = function send() {
    var input = document.getElementById('chat-input');
    var message = input.value.trim();
    if (message) {
      var chatBody = document.getElementById('chat-body');
      var new_m = document.createElement('p');
      new_m.textContent = message;
      chatBody.appendChild(new_m);
      input.value = '';
      chatBody.scrollTop = chatBody.scrollHeight;
    }
  };

  // Get references to button and sidebar
  var toggleButton = document.getElementById('toggleButton');
  var sidebar = document.getElementById('sidebar');

  // Function to open the sidebar
  function openSidebar() {
    sidebar.classList.add('open');
  }

  // Function to close the sidebar
  function closeSidebar() {
    sidebar.classList.remove('open');
  }

  // Event listeners
  toggleButton.addEventListener('click', openSidebar);

  // Close sidebar when clicking anywhere outside
  document.addEventListener('click', function(event) {
    if (!sidebar.contains(event.target) && !toggleButton.contains(event.target)) {
      closeSidebar();
    }
  });

  // Redirect functions
  c.redirectRequest = function (id, type) {
    top.window.location = "/customer_portal?id=asm_request_details&sys_id=" + id;
  };

  c.redirectOffer = function (id) {
    top.window.location = "/customer_portal?id=asm_current_offer";
  };
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Container for both notification and chatbot icons */
.homepage-icons {
    position: fixed;
    bottom: 20px;
    right: 30px;
    z-index: 9999;
    display: flex;
    flex-direction: column; /* Stack vertically */
    align-items: center;
}

/* Notification Button Styles */
.notification-container {
    margin-bottom: 10px; /* Space between notification and chatbot button */
}

.notification-button {
    position: relative;
    padding: 20px;
    background-color: #0A1128;
    color: white;
    border: none;
    border-radius: 50%;
    font-size: 20px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.badge {
    position: absolute;
    top: -5px;
    right: -5px;
    background-color: red;
    color: white;
    font-size: 12px;
    padding: 5px 8px;
    border-radius: 50%;
    font-weight: bold;
}

/* Chatbot Button Styles */
.chatbot-button {
    background-color: #FF8833;  
    color: #ffffff;
    border: none;
    width: 65px;
    height: 65px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    font-size: 30px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

/* Hover effect for chatbot button */
.chatbot-button:hover {
    background-color: #FF7043;
}

/* Chat container styles */
#chat-container {
    position: fixed;
    bottom: 90px; /* Position below the icons */
    right: 30px;
    width: 400px; 
    z-index: 9999;
}

/* Chatbox styling */
.chat-header {
    background-color: #FF8833;
    color: #ffffff;
    font-weight: bold;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 16px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
}

.chat-body {
    height: 300px;
    padding: 10px;
    overflow-y: auto;
    background-color: #f9f9f9;
}

.chat-footer {
    display: flex;
    padding: 10px;
    background-color: #ffffff;
    margin-bottom: 10px;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

.chat-footer input {
    flex: 1;
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 10px;
    margin-right: 5px;
}

.chat-footer button {
    background-color: #FF8833;
    color: #ffffff;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    border-radius: 10px;
    font-weight: bold;
}

.chat-footer button:hover {
    background-color: #cc4e20;
}

/* Hidden class for chat */
.hidden {
    display: none;
}


/* Sidebar styling */
.sidebar {
    height: 100vh;  /* Use full viewport height to make the sidebar reach the bottom of the page */
    width: 0;
    position: fixed;
    top: 0;
    right: 0; /* Align sidebar to the right */
    overflow: hidden; /* Hide default scrollbars */
    transition: 0.3s ease;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Align items at the top */
    padding-top: 60px; /* Space for the close button */
  	padding-bottom: 20px;
    background-color: #1d1c1c;
  	

}

/* Sidebar content scrollable container */
.sidebar .content {
    padding: 20px;
    height: calc(100vh - 60px); /* Adjust height to fit the entire page */
    overflow-y: auto; /* Enable vertical scrolling */
    overflow-x: hidden; /* Disable horizontal scrolling */
    -ms-overflow-style: none; /* Hide scrollbar for IE */
    scrollbar-width: none; /* Hide scrollbar for Firefox */
}


/* Hide the scrollbar for WebKit browsers like Chrome/Safari */
.sidebar .content::-webkit-scrollbar {
    display: none;
}

/* Sidebar content alignment */
.sidebar h2, .sidebar p {
    margin: 0;
    font-size: 18px;
}

/* Close button inside sidebar */
#closeButton {
    font-size: 16px;
    padding: 10px 15px;
    cursor: pointer;
    background-color: #444;
    color: white;
    border: none;
    margin: 10px;
}

/* Adjust button and content for smoother interaction */
.sidebar h2 {
    font-size: 24px;
    margin-bottom: 20px;
    text-align: center;
}

.sidebar p {
    font-size: 16px;
    margin-bottom: 10px;
    text-align: left;
}

/* When sidebar is open, adjust width */
.sidebar.open {
    width: 300px; /* Increased width for better alignment */
}

/* Card styles inside sidebar */
.card {
    background-color: #333;
    margin: 10px;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
}

.card h3 {
    font-size: 18px;
    margin-bottom: 10px;
}

.card p {
    font-size: 14px;
    color: #ccc;
}

/* Hover effect on card */
.card:hover {
    transform: scale(1.1); /* Increase size */
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3); /* Add shadow for emphasis */
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>asm_home_page_icons</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Home Page Icons</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if(!input){
		
		data.notificationCount = 0;
		data.notificationArray = [];


		// Inspection Notification

		//data.InspectionReqArr = [];
		//data.InspecCount = 0;
		var grRequestsInspection = new GlideRecord('x_1522458_automo_0_service_request');
		grRequestsInspection.addEncodedQuery("opened_byDYNAMIC90d1921e5f510100a9ad2572f2b477fe^state=5^ORstate=7^ORstate=6");
		grRequestsInspection.query();



		while (grRequestsInspection.next()){

			var grTasksInspection =  new GlideRecord('x_1522458_automo_0_task');
			grTasksInspection.addEncodedQuery("request="+grRequestsInspection.getDisplayValue('sys_id')+"^state=scheduled");

			grTasksInspection.query();

			while (grTasksInspection.next()){
				data.notificationArray.push({
					type: "Inspection",
					number:grRequestsInspection.getDisplayValue('number'),
					sys_id:grRequestsInspection.getDisplayValue('sys_id'),
					desired_time:grRequestsInspection.getDisplayValue('desired_time'),
					opened_by:grRequestsInspection.getDisplayValue('opened_by'),
					state:grRequestsInspection.getDisplayValue('state'),
					Date: grTasksInspection.getDisplayValue('date'),
					Time: grTasksInspection.getDisplayValue('available_times')
				});
			}

			//data.InspecCount = data.InspectionReqArr.length;
		}


		// Offer Notification

		//data.CurrentOfferArr = []
		//data.CurrentOfferCount = 0;
		var grOffers = new GlideRecord('x_1522458_automo_0_offer');
		grOffers.addEncodedQuery("request_number.opened_byDYNAMIC90d1921e5f510100a9ad2572f2b477fe^state=Waiting");
		grOffers.query();

		while(grOffers.next()){
			data.notificationArray.push({
				type: "Offer",
				number: grOffers.getDisplayValue('number'),
				sys_id: grOffers.getDisplayValue('sys_id'),
				state: grOffers.getDisplayValue('state'),
				desc: grOffers.getDisplayValue('description'),
				request:grOffers.getDisplayValue('request_number')
			});

		}
		//data.CurrentOfferCount = data.CurrentOfferArr.length;



		// Repaire notification

		//data.InprogressArr =[];
		//data.InprogressCount =''

		var grRequestsInProg = new GlideRecord('x_1522458_automo_0_service_request');
		grRequestsInProg.addEncodedQuery("opened_byDYNAMIC90d1921e5f510100a9ad2572f2b477fe^state=2");
		grRequestsInProg.query();


		while (grRequestsInProg.next()){
			data.notificationArray.push({
				type: "Repair",
				number:grRequestsInProg.getDisplayValue('number'),
				sys_id:grRequestsInProg.getDisplayValue('sys_id'),
				desired_time:grRequestsInProg.getDisplayValue('desired_time'),
				opened_by:grRequestsInProg.getDisplayValue('opened_by'),
				state:grRequestsInProg.getDisplayValue('state')
			});
		}

		//data.InprogressCount = data.InprogressArr.length;


		// Closed&Feedback notification

		//data.ClosedArr =[];
		//data.ClosedCount =0;

		var grRequestsClosed = new GlideRecord('x_1522458_automo_0_service_request');
		grRequestsClosed.addEncodedQuery("opened_byDYNAMIC90d1921e5f510100a9ad2572f2b477fe^state=3");
		grRequestsClosed.query();


		while (grRequestsClosed.next()){

			var grFeedBack = new GlideRecord('x_1522458_automo_0_customer_feedback');
			grFeedBack.addEncodedQuery("request="+grRequestsClosed.getDisplayValue('sys_id'));
			grFeedBack.query();

			if (grFeedBack.getRowCount() ===0){
				data.notificationArray.push({
					type: "Feedback",
					number:grRequestsClosed.getDisplayValue('number'),
					sys_id:grRequestsClosed.getDisplayValue('sys_id'),
					desired_time:grRequestsClosed.getDisplayValue('desired_time'),
					opened_by:grRequestsClosed.getDisplayValue('opened_by'),
					state:grRequestsClosed.getDisplayValue('state')
				});
			}

			//data.ClosedCount = data.ClosedArr.length;
		}
		
		//data.notificationCount = data.InspecCount + data.CurrentOfferCount + data.InprogressCount + data.ClosedCount 
		
		
		 











	}


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-25 12:37:18</sys_created_on>
        <sys_id>5aac32ff83e61250cccd5d10feaad335</sys_id>
        <sys_mod_count>109</sys_mod_count>
        <sys_name>Home Page Icons</sys_name>
        <sys_package display_value="Automotive Service Management" source="x_1522458_automo_0">22ad9dee83861210cccd5d10feaad392</sys_package>
        <sys_policy/>
        <sys_scope display_value="Automotive Service Management">22ad9dee83861210cccd5d10feaad392</sys_scope>
        <sys_update_name>sp_widget_5aac32ff83e61250cccd5d10feaad335</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-09 07:27:03</sys_updated_on>
        <template><![CDATA[<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<!-- Homepage Icons container -->
<div class="homepage-icons">
  <!-- Notification Button -->
  <div id="toggleButton" class="notification-container" ng-click="c.redirect()">
    <button class="notification-button">
      <i class="fa-regular fa-bell"></i>
      <span class="badge">{{c.data.notificationArray.length}}</span>
    </button>
  </div>

  <!-- Chatbot Button -->
  <div class="chatbot-button" ng-click="c.openChat()">
    <i class="fas fa-robot"></i>
  </div>

  <!-- Chatbot container -->
  <div id="chat-container" class="chat-container hidden">
    <div class="chat-header">
      <span>Chat</span>
      <button ng-click="c.closeChat()" style="color:#000000;border:none">&times;</button>
    </div>
    <div class="chat-body" id="chat-body">
      <p>Welcome! How can I help you?</p>
    </div>
    <div class="chat-footer">
      <input type="text" id="chat-input" placeholder="Type a message...">
      <button ng-click="c.sendMessage()">Send</button>
    </div>
  </div>


 


  <div id="sidebar" class="sidebar">
    
    <h2>
      Notifications
    </h2>

    <div class="content"  >
      <div class="CONTAINER" ng-repeat="s in c.data.notificationArray">
        <div class="CardsContainer" ng-if="s.type != 'Offer'">
          <div class="card" ng-click="c.redirectRequest(s.sys_id, s.type)">
            <h3>Request {{s.number}}</h3>
            <p ng-switch="s.type">
              <span ng-switch-when="Inspection">Get ready! You have an inspection appointment on {{s.Date}} &#x1F600;.</span>
              <span ng-switch-when="Repair">We're working on your vehicle. Stay tuned &#x1F609;.</span>
              <span ng-switch-when="Feedback">Congratulations!&#x1F389; &#x1F389; Your vehicle is fixed! ... Give us your feedback &#x1F60A;.</span>
              <span ng-switch-default>No specific type provided.</span> <!-- Optional default text -->
            </p>
          </div>
        </div>

        <div class="CardsContainer" ng-if="s.type === 'Offer'">
          <div class="card" ng-click="c.redirectOffer(s.sys_id)">
            <h3>Request {{s.request}}</h3>
            <p>Congratulation&#x1F62E;!You have a service offer!</p>
          </div>
        </div>
      </div>



    </div>

  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
